/* Basic Reset */
body, h1, p, div {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body, #root {
  height: 100%; /* Make root elements take full height */
  overflow: hidden; /* Prevent body scrollbars if content overflows */
}

body {
  font-family: sans-serif;
  background-color: #f4f4f4; /* Light gray background */
  /* Remove body padding */
}

/* Style for the main App container if needed */
.App {
  height: 100%; /* Make App take full height */
  display: flex; /* Use flexbox for App layout */
  flex-direction: column; /* Stack header and main content */
  /* Remove constraints to allow full screen */
  /* max-width: 1000px; */
  /* margin: 0 auto; */
  background-color: #fff; /* Keep white background */
  /* padding: 20px; */ /* Remove padding, handle inside components */
  /* border-radius: 8px; */
  /* box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); */
}

/* Basic sticky note styling (can be overridden by component styles) */
.sticky-note {
  /* Base styles defined in StickyNote.tsx */
  box-shadow: 1px 1px 3px rgba(0,0,0,0.2);
  transition: background-color 0.3s ease; /* Smooth color transition */
}

/* Placeholder for zone-specific styles if needed globally, */
/* though primarily handled in components */
.zone-wwtf { }
.zone-wtf { }
.zone-clarity { }

/* Ensure nested absolute positioning works */
.circle-zone {
  position: relative; /* Already set in component, but good to reinforce */
}

/* Style for the input area */
/* (Already styled inline in WhiteboardCanvas, but could be moved here) */

/* Styles for react-resizable handle */
.custom-resize-handle {
  position: absolute;
  width: 10px;
  height: 100%;
  top: 0;
  left: -5px; /* Position handle slightly to the left of the resizable box edge */
  cursor: col-resize;
  background: #eee;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  z-index: 100; /* Ensure handle is clickable */
  box-sizing: border-box;
}

.custom-resize-handle:hover {
  background: #ddd;
}
